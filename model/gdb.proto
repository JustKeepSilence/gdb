syntax = "proto3";
package model;
option go_package="model";

import "google/protobuf/empty.proto";

message Rows{
  int32 effectedRows = 1;
}

message Cols{
  int32 effectedCols = 1;
}

// group handler

message AddedGroupInfo {
  string groupName = 1;
  repeated string columnNames = 2;
}

message AddedGroupInfos {
  repeated AddedGroupInfo groupInfos = 1;
}

message GroupNamesInfo {
  repeated string groupNames = 1;
}

message GroupPropertyInfo{
  string itemCount = 1;
  repeated string itemColumnNames = 2;
}

message QueryGroupPropertyInfo{
  string groupName = 1;
  string condition = 2;
}

message UpdatedGroupNameInfo {
  string oldGroupName = 1;
  string newGroupName = 2;
}

message UpdatedGroupNamesInfo {
  repeated UpdatedGroupNameInfo infos = 1;
}

message UpdatedGroupColumnNamesInfo {
  string groupName = 1;
  repeated string oldColumnNames = 2;
  repeated string newColumnNames = 3;
}

message DeletedGroupColumnNamesInfo {
  string groupName = 1;
  repeated string columnNames = 2;
}

message AddedGroupColumnsInfo{
  string groupName = 1;
  repeated string columnNames = 2;
  repeated string defaultValues = 3;
}

service Group {
  rpc AddGroups(AddedGroupInfos) returns (Rows){}
  rpc DeleteGroups(GroupNamesInfo) returns (Rows){}
  rpc GetGroups(google.protobuf.Empty) returns (GroupNamesInfo) {}
  rpc GetGroupProperty(QueryGroupPropertyInfo) returns (GroupPropertyInfo){}
  rpc UpdateGroupNames(UpdatedGroupNamesInfo) returns (Rows){}
  rpc UpdateGroupColumnNames(UpdatedGroupColumnNamesInfo) returns (Cols){}
  rpc DeleteGroupColumns(DeletedGroupColumnNamesInfo) returns (Cols){}
  rpc AddGroupColumns(AddedGroupColumnsInfo) returns (Cols){}
  rpc CleanGroupItems(GroupNamesInfo) returns (Rows){}
}

// item handler

message AddedItemsInfo {
  string groupName = 1;
  string itemValues = 2;
}

message DeletedItemsInfo {
  string groupName = 1;
  string condition = 2;
}

message ItemsInfo{
  string groupName = 1;
  string condition = 5;
  string clause = 6;
  string columnNames = 2;
  int32 startRow = 3;
  int32 rowCount = 4;
}

message GdbItem{
  map<string, string> items = 1;
}

message GdbItems {
  repeated GdbItem itemValues = 2;
}

message GdbItemsWithCount {
  int32 itemCount = 1;
  repeated GdbItem itemValues = 2;
}

message CheckItemsInfo {
  string groupName = 1;
  repeated  string itemNames = 2;
}

service Item {
  rpc AddItems(AddedItemsInfo) returns (Rows){}
  rpc DeleteItems(DeletedItemsInfo) returns (Rows){}
  rpc GetItems(ItemsInfo) returns (GdbItems){}
  rpc GetItemsWithCount(ItemsInfo) returns (GdbItemsWithCount){}
  rpc UpdateItems(ItemsInfo) returns (Rows){}
  rpc CheckItems(CheckItemsInfo) returns (google.protobuf.Empty){}
}

// data handler

message ItemValue{
  string itemName = 1;
  string value = 2;
  string timeStamp = 3;
}

message BatchWriteString{
  repeated ItemValue itemValues = 3;
}

message QueryRealTimeDataString{
  repeated string itemNames = 1;
}

// Notes: because in rpc proto we can't define Current map type,so use string to replace
// current map, that is we use json.Marshal to convert current map to string
message GdbRealTimeData{
  string realTimeData = 1;
}

message QueryHistoricalDataString{
  repeated string itemNames = 1;
  repeated int32 startTimes = 2;
  repeated int32 endTimes = 3;
  repeated int32 intervals = 4;
}

message GdbHistoricalData{
  string historicalData = 1;
}

message TimeStamp {
  repeated int32 timeStamp = 1;
}

message QueryHistoricalDataWithTimeStampString{
  repeated string itemNames = 1;
  repeated TimeStamp timeStamps = 2;
}

message DeadZone {
  string itemName = 1;
  int32 deadZoneCount = 2;
}

message QueryHistoricalDataWithConditionString{
  repeated string itemNames = 1;
  repeated TimeStamp timeStamps = 2;
  repeated int32 startTimes = 3;
  repeated int32 endTimes = 4;
  repeated int32 intervals = 5;
  string filterCondition = 6;
  repeated DeadZone deadZones = 7;
}

message GdbInfoData{
  string info = 1;
}

message HistoricalItemValue{
  string itemName = 1;
  repeated string values = 2;
  repeated string timeStamps = 3;
}

message BatchWriteHistoricalString {
  repeated HistoricalItemValue historicalItemValues = 1;
}

message QuerySpeedHistoryDataString{
  string itemName = 1;
  repeated int32 startTimes = 2;
  repeated int32 endTimes = 3;
  int32 interval = 4;
}


service Data {
  rpc BatchWrite(BatchWriteString) returns (Rows){}
  rpc BatchWriteWithStream(stream BatchWriteString) returns (Rows){}
  rpc BatchWriteHistoricalData(BatchWriteHistoricalString) returns (google.protobuf.Empty){}
  rpc BatchWriteHistoricalDataWithStream(stream BatchWriteHistoricalString) returns (google.protobuf.Empty){}
  rpc GetRealTimeData(QueryRealTimeDataString) returns (GdbRealTimeData){}
  rpc GetHistoricalData(QueryHistoricalDataString) returns (GdbHistoricalData){}
  rpc GetHistoricalDataWithStamp(QueryHistoricalDataWithTimeStampString) returns (GdbHistoricalData){}
  rpc GetDbInfo(google.protobuf.Empty) returns (GdbInfoData){}
  rpc GetDbInfoHistory(QuerySpeedHistoryDataString) returns (GdbHistoricalData){}
}

// page

message AuthInfo {
  string userName = 1;
  string passWord = 2;
}

message UserToken {
  string token = 1;
}

message UserName{
  string name = 1;
}

message UserInfo{
  UserName userName = 1;
  repeated string role = 2;
}

message QueryLogsInfo{
  string level = 1;
  string startTime = 2;
  string endTime = 3;
  int32 startRow = 4;
  int32 rowCount = 5;
  string name = 6;
}

message LogsInfo {
  string infos = 1;
  int32 count = 2;
}

message FileInfo{
  string fileName = 1;
  string groupName = 2;
}

message UploadedFileInfo{
  string fileName = 1;
  repeated int32 file = 2;
}

message HistoryFileInfo {
  string fileName = 1;
  repeated string itemNames = 2;
  repeated string sheetNames = 3;
}

message FileContents {
  repeated int32 contents = 1;
}

message UserInfos {
  string userInfos = 1;
}

message AddUserInfo{
  string name = 1;
  string role = 2;
  string passWord = 3;
}

message UpdatedUserInfo{
  int32 id = 1;
  string oldUserName = 2;
  string newUserName = 3;
  string role = 4;
}

message DeletedLogInfo {
  string id = 1;
  string startTime = 2;
  string endTime = 3;
  string userNameCondition = 4;
}

service Page {
  rpc UserLogin(AuthInfo) returns (UserToken){}
  rpc UserLogOut(UserName) returns (google.protobuf.Empty){}
  rpc GetUserInfo(UserName) returns (UserInfo){}
  rpc GetUsers(google.protobuf.Empty) returns (UserInfos) {}
  rpc AddUsers(AddUserInfo) returns (Rows){}
  rpc DeleteUsers(UserName) returns (Rows){}
  rpc UpdateUsers(UpdatedUserInfo) returns (Rows){}
  rpc UploadFile(UploadedFileInfo) returns (google.protobuf.Empty){}
  rpc UploadFileWithStream(stream UploadedFileInfo) returns (google.protobuf.Empty){}  // for file > 4194304, or you can set MaxCallRecvMsgSize
  rpc AddItemsByExcel(FileInfo) returns (Rows){}
  rpc ImportHistoryByExcel(HistoryFileInfo) returns (google.protobuf.Empty){}
  rpc GetLogs(QueryLogsInfo) returns (LogsInfo){}
  rpc DeleteLogs(DeletedLogInfo) returns (Rows){}
  rpc DownloadFile(FileInfo) returns (FileContents){}
}

// calculation

message AddedCalcItemInfo{
  string expression = 1;
  string flag = 2;
  string duration = 3;
  string description = 6;
}

message CalculationResult{
  string result = 1;
}

message CalculationResults{
  repeated CalculationResult results = 1;
}

message QueryCalcItemsInfo{
  string condition = 1;
}

message CalcItemInfo{
  map<string, string> info = 1;
}

message CalcItemsInfo{
  repeated CalcItemInfo infos = 2;
}

message UpdatedCalcInfo{
  string id = 1;
  string description = 2;
  string expression = 3;
  string duration = 4;
}

message CalcId {
  repeated string id = 1;
}

service Calc {
  rpc AddCalcItem(AddedCalcItemInfo) returns (CalculationResult){}
  rpc AddCalcItemWithStream(stream AddedCalcItemInfo) returns (CalculationResults){}
  rpc GetCalcItems(QueryCalcItemsInfo) returns (CalcItemsInfo){}
  rpc UpdateCalcItem(UpdatedCalcInfo) returns (CalculationResult){}
  rpc StartCalcItem(CalcId) returns (Rows){}
  rpc StopCalcItem(CalcId) returns (Rows){}
  rpc DeleteCalcItem(CalcId) returns (Rows){}
}