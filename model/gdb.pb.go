// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.15.6
// source: gdb.proto

package model

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Rows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectedRows int32 `protobuf:"varint,1,opt,name=effectedRows,proto3" json:"effectedRows,omitempty"`
}

func (x *Rows) Reset() {
	*x = Rows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rows) ProtoMessage() {}

func (x *Rows) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rows.ProtoReflect.Descriptor instead.
func (*Rows) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{0}
}

func (x *Rows) GetEffectedRows() int32 {
	if x != nil {
		return x.EffectedRows
	}
	return 0
}

type Cols struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EffectedCols int32 `protobuf:"varint,1,opt,name=effectedCols,proto3" json:"effectedCols,omitempty"`
}

func (x *Cols) Reset() {
	*x = Cols{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cols) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cols) ProtoMessage() {}

func (x *Cols) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cols.ProtoReflect.Descriptor instead.
func (*Cols) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{1}
}

func (x *Cols) GetEffectedCols() int32 {
	if x != nil {
		return x.EffectedCols
	}
	return 0
}

type AddedGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName   string   `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	ColumnNames []string `protobuf:"bytes,2,rep,name=columnNames,proto3" json:"columnNames,omitempty"`
}

func (x *AddedGroupInfo) Reset() {
	*x = AddedGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddedGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddedGroupInfo) ProtoMessage() {}

func (x *AddedGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddedGroupInfo.ProtoReflect.Descriptor instead.
func (*AddedGroupInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{2}
}

func (x *AddedGroupInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AddedGroupInfo) GetColumnNames() []string {
	if x != nil {
		return x.ColumnNames
	}
	return nil
}

type AddedGroupInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupInfos []*AddedGroupInfo `protobuf:"bytes,1,rep,name=groupInfos,proto3" json:"groupInfos,omitempty"`
}

func (x *AddedGroupInfos) Reset() {
	*x = AddedGroupInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddedGroupInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddedGroupInfos) ProtoMessage() {}

func (x *AddedGroupInfos) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddedGroupInfos.ProtoReflect.Descriptor instead.
func (*AddedGroupInfos) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{3}
}

func (x *AddedGroupInfos) GetGroupInfos() []*AddedGroupInfo {
	if x != nil {
		return x.GroupInfos
	}
	return nil
}

type GroupNamesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupNames []string `protobuf:"bytes,1,rep,name=groupNames,proto3" json:"groupNames,omitempty"`
}

func (x *GroupNamesInfo) Reset() {
	*x = GroupNamesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupNamesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupNamesInfo) ProtoMessage() {}

func (x *GroupNamesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupNamesInfo.ProtoReflect.Descriptor instead.
func (*GroupNamesInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{4}
}

func (x *GroupNamesInfo) GetGroupNames() []string {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

type GroupPropertyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemCount       string   `protobuf:"bytes,1,opt,name=itemCount,proto3" json:"itemCount,omitempty"`
	ItemColumnNames []string `protobuf:"bytes,2,rep,name=itemColumnNames,proto3" json:"itemColumnNames,omitempty"`
}

func (x *GroupPropertyInfo) Reset() {
	*x = GroupPropertyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupPropertyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupPropertyInfo) ProtoMessage() {}

func (x *GroupPropertyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupPropertyInfo.ProtoReflect.Descriptor instead.
func (*GroupPropertyInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{5}
}

func (x *GroupPropertyInfo) GetItemCount() string {
	if x != nil {
		return x.ItemCount
	}
	return ""
}

func (x *GroupPropertyInfo) GetItemColumnNames() []string {
	if x != nil {
		return x.ItemColumnNames
	}
	return nil
}

type QueryGroupPropertyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Condition string `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *QueryGroupPropertyInfo) Reset() {
	*x = QueryGroupPropertyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGroupPropertyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGroupPropertyInfo) ProtoMessage() {}

func (x *QueryGroupPropertyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGroupPropertyInfo.ProtoReflect.Descriptor instead.
func (*QueryGroupPropertyInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{6}
}

func (x *QueryGroupPropertyInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *QueryGroupPropertyInfo) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type UpdatedGroupNameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldGroupName string `protobuf:"bytes,1,opt,name=oldGroupName,proto3" json:"oldGroupName,omitempty"`
	NewGroupName string `protobuf:"bytes,2,opt,name=newGroupName,proto3" json:"newGroupName,omitempty"`
}

func (x *UpdatedGroupNameInfo) Reset() {
	*x = UpdatedGroupNameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedGroupNameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedGroupNameInfo) ProtoMessage() {}

func (x *UpdatedGroupNameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedGroupNameInfo.ProtoReflect.Descriptor instead.
func (*UpdatedGroupNameInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatedGroupNameInfo) GetOldGroupName() string {
	if x != nil {
		return x.OldGroupName
	}
	return ""
}

func (x *UpdatedGroupNameInfo) GetNewGroupName() string {
	if x != nil {
		return x.NewGroupName
	}
	return ""
}

type UpdatedGroupNamesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*UpdatedGroupNameInfo `protobuf:"bytes,1,rep,name=infos,proto3" json:"infos,omitempty"`
}

func (x *UpdatedGroupNamesInfo) Reset() {
	*x = UpdatedGroupNamesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedGroupNamesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedGroupNamesInfo) ProtoMessage() {}

func (x *UpdatedGroupNamesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedGroupNamesInfo.ProtoReflect.Descriptor instead.
func (*UpdatedGroupNamesInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatedGroupNamesInfo) GetInfos() []*UpdatedGroupNameInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type UpdatedGroupColumnNamesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName      string   `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	OldColumnNames []string `protobuf:"bytes,2,rep,name=oldColumnNames,proto3" json:"oldColumnNames,omitempty"`
	NewColumnNames []string `protobuf:"bytes,3,rep,name=newColumnNames,proto3" json:"newColumnNames,omitempty"`
}

func (x *UpdatedGroupColumnNamesInfo) Reset() {
	*x = UpdatedGroupColumnNamesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedGroupColumnNamesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedGroupColumnNamesInfo) ProtoMessage() {}

func (x *UpdatedGroupColumnNamesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedGroupColumnNamesInfo.ProtoReflect.Descriptor instead.
func (*UpdatedGroupColumnNamesInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{9}
}

func (x *UpdatedGroupColumnNamesInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UpdatedGroupColumnNamesInfo) GetOldColumnNames() []string {
	if x != nil {
		return x.OldColumnNames
	}
	return nil
}

func (x *UpdatedGroupColumnNamesInfo) GetNewColumnNames() []string {
	if x != nil {
		return x.NewColumnNames
	}
	return nil
}

type DeletedGroupColumnNamesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName   string   `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	ColumnNames []string `protobuf:"bytes,2,rep,name=columnNames,proto3" json:"columnNames,omitempty"`
}

func (x *DeletedGroupColumnNamesInfo) Reset() {
	*x = DeletedGroupColumnNamesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletedGroupColumnNamesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedGroupColumnNamesInfo) ProtoMessage() {}

func (x *DeletedGroupColumnNamesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedGroupColumnNamesInfo.ProtoReflect.Descriptor instead.
func (*DeletedGroupColumnNamesInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{10}
}

func (x *DeletedGroupColumnNamesInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *DeletedGroupColumnNamesInfo) GetColumnNames() []string {
	if x != nil {
		return x.ColumnNames
	}
	return nil
}

type AddedGroupColumnsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName     string   `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	ColumnNames   []string `protobuf:"bytes,2,rep,name=columnNames,proto3" json:"columnNames,omitempty"`
	DefaultValues []string `protobuf:"bytes,3,rep,name=defaultValues,proto3" json:"defaultValues,omitempty"`
}

func (x *AddedGroupColumnsInfo) Reset() {
	*x = AddedGroupColumnsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddedGroupColumnsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddedGroupColumnsInfo) ProtoMessage() {}

func (x *AddedGroupColumnsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddedGroupColumnsInfo.ProtoReflect.Descriptor instead.
func (*AddedGroupColumnsInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{11}
}

func (x *AddedGroupColumnsInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AddedGroupColumnsInfo) GetColumnNames() []string {
	if x != nil {
		return x.ColumnNames
	}
	return nil
}

func (x *AddedGroupColumnsInfo) GetDefaultValues() []string {
	if x != nil {
		return x.DefaultValues
	}
	return nil
}

type AddedItemsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName  string `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	ItemValues string `protobuf:"bytes,2,opt,name=itemValues,proto3" json:"itemValues,omitempty"`
}

func (x *AddedItemsInfo) Reset() {
	*x = AddedItemsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddedItemsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddedItemsInfo) ProtoMessage() {}

func (x *AddedItemsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddedItemsInfo.ProtoReflect.Descriptor instead.
func (*AddedItemsInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{12}
}

func (x *AddedItemsInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *AddedItemsInfo) GetItemValues() string {
	if x != nil {
		return x.ItemValues
	}
	return ""
}

type DeletedItemsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Condition string `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *DeletedItemsInfo) Reset() {
	*x = DeletedItemsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletedItemsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedItemsInfo) ProtoMessage() {}

func (x *DeletedItemsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedItemsInfo.ProtoReflect.Descriptor instead.
func (*DeletedItemsInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{13}
}

func (x *DeletedItemsInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *DeletedItemsInfo) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type ItemsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName   string `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Condition   string `protobuf:"bytes,5,opt,name=condition,proto3" json:"condition,omitempty"`
	Clause      string `protobuf:"bytes,6,opt,name=clause,proto3" json:"clause,omitempty"`
	ColumnNames string `protobuf:"bytes,2,opt,name=columnNames,proto3" json:"columnNames,omitempty"`
	StartRow    int32  `protobuf:"varint,3,opt,name=startRow,proto3" json:"startRow,omitempty"`
	RowCount    int32  `protobuf:"varint,4,opt,name=rowCount,proto3" json:"rowCount,omitempty"`
}

func (x *ItemsInfo) Reset() {
	*x = ItemsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemsInfo) ProtoMessage() {}

func (x *ItemsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemsInfo.ProtoReflect.Descriptor instead.
func (*ItemsInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{14}
}

func (x *ItemsInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ItemsInfo) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *ItemsInfo) GetClause() string {
	if x != nil {
		return x.Clause
	}
	return ""
}

func (x *ItemsInfo) GetColumnNames() string {
	if x != nil {
		return x.ColumnNames
	}
	return ""
}

func (x *ItemsInfo) GetStartRow() int32 {
	if x != nil {
		return x.StartRow
	}
	return 0
}

func (x *ItemsInfo) GetRowCount() int32 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

type UpdatedItemsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	Condition string `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	Clause    string `protobuf:"bytes,3,opt,name=clause,proto3" json:"clause,omitempty"`
}

func (x *UpdatedItemsInfo) Reset() {
	*x = UpdatedItemsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedItemsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedItemsInfo) ProtoMessage() {}

func (x *UpdatedItemsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedItemsInfo.ProtoReflect.Descriptor instead.
func (*UpdatedItemsInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{15}
}

func (x *UpdatedItemsInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UpdatedItemsInfo) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *UpdatedItemsInfo) GetClause() string {
	if x != nil {
		return x.Clause
	}
	return ""
}

type GdbItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items map[string]string `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GdbItem) Reset() {
	*x = GdbItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdbItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdbItem) ProtoMessage() {}

func (x *GdbItem) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdbItem.ProtoReflect.Descriptor instead.
func (*GdbItem) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{16}
}

func (x *GdbItem) GetItems() map[string]string {
	if x != nil {
		return x.Items
	}
	return nil
}

type GdbItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemValues []*GdbItem `protobuf:"bytes,2,rep,name=itemValues,proto3" json:"itemValues,omitempty"`
}

func (x *GdbItems) Reset() {
	*x = GdbItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdbItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdbItems) ProtoMessage() {}

func (x *GdbItems) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdbItems.ProtoReflect.Descriptor instead.
func (*GdbItems) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{17}
}

func (x *GdbItems) GetItemValues() []*GdbItem {
	if x != nil {
		return x.ItemValues
	}
	return nil
}

type GdbItemsWithCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemCount  int32      `protobuf:"varint,1,opt,name=itemCount,proto3" json:"itemCount,omitempty"`
	ItemValues []*GdbItem `protobuf:"bytes,2,rep,name=itemValues,proto3" json:"itemValues,omitempty"`
}

func (x *GdbItemsWithCount) Reset() {
	*x = GdbItemsWithCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdbItemsWithCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdbItemsWithCount) ProtoMessage() {}

func (x *GdbItemsWithCount) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdbItemsWithCount.ProtoReflect.Descriptor instead.
func (*GdbItemsWithCount) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{18}
}

func (x *GdbItemsWithCount) GetItemCount() int32 {
	if x != nil {
		return x.ItemCount
	}
	return 0
}

func (x *GdbItemsWithCount) GetItemValues() []*GdbItem {
	if x != nil {
		return x.ItemValues
	}
	return nil
}

type CheckItemsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string   `protobuf:"bytes,1,opt,name=groupName,proto3" json:"groupName,omitempty"`
	ItemNames []string `protobuf:"bytes,2,rep,name=itemNames,proto3" json:"itemNames,omitempty"`
}

func (x *CheckItemsInfo) Reset() {
	*x = CheckItemsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckItemsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckItemsInfo) ProtoMessage() {}

func (x *CheckItemsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckItemsInfo.ProtoReflect.Descriptor instead.
func (*CheckItemsInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{19}
}

func (x *CheckItemsInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *CheckItemsInfo) GetItemNames() []string {
	if x != nil {
		return x.ItemNames
	}
	return nil
}

type BatchWriteString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemValues string `protobuf:"bytes,3,opt,name=itemValues,proto3" json:"itemValues,omitempty"`
}

func (x *BatchWriteString) Reset() {
	*x = BatchWriteString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchWriteString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchWriteString) ProtoMessage() {}

func (x *BatchWriteString) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchWriteString.ProtoReflect.Descriptor instead.
func (*BatchWriteString) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{20}
}

func (x *BatchWriteString) GetItemValues() string {
	if x != nil {
		return x.ItemValues
	}
	return ""
}

type QueryRealTimeDataString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupNames []string `protobuf:"bytes,2,rep,name=groupNames,proto3" json:"groupNames,omitempty"`
	ItemNames  []string `protobuf:"bytes,1,rep,name=itemNames,proto3" json:"itemNames,omitempty"`
}

func (x *QueryRealTimeDataString) Reset() {
	*x = QueryRealTimeDataString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRealTimeDataString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRealTimeDataString) ProtoMessage() {}

func (x *QueryRealTimeDataString) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRealTimeDataString.ProtoReflect.Descriptor instead.
func (*QueryRealTimeDataString) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{21}
}

func (x *QueryRealTimeDataString) GetGroupNames() []string {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *QueryRealTimeDataString) GetItemNames() []string {
	if x != nil {
		return x.ItemNames
	}
	return nil
}

// Notes: because in rpc proto we can't define Current map type,so use string to replace
// current map, that is we use json.Marshal to convert current map to string
type GdbRealTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealTimeData string `protobuf:"bytes,1,opt,name=realTimeData,proto3" json:"realTimeData,omitempty"`
}

func (x *GdbRealTimeData) Reset() {
	*x = GdbRealTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdbRealTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdbRealTimeData) ProtoMessage() {}

func (x *GdbRealTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdbRealTimeData.ProtoReflect.Descriptor instead.
func (*GdbRealTimeData) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{22}
}

func (x *GdbRealTimeData) GetRealTimeData() string {
	if x != nil {
		return x.RealTimeData
	}
	return ""
}

type QueryHistoricalDataString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupNames []string `protobuf:"bytes,5,rep,name=groupNames,proto3" json:"groupNames,omitempty"`
	ItemNames  []string `protobuf:"bytes,1,rep,name=itemNames,proto3" json:"itemNames,omitempty"`
	StartTimes []int32  `protobuf:"varint,2,rep,packed,name=startTimes,proto3" json:"startTimes,omitempty"`
	EndTimes   []int32  `protobuf:"varint,3,rep,packed,name=endTimes,proto3" json:"endTimes,omitempty"`
	Intervals  []int32  `protobuf:"varint,4,rep,packed,name=intervals,proto3" json:"intervals,omitempty"`
}

func (x *QueryHistoricalDataString) Reset() {
	*x = QueryHistoricalDataString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHistoricalDataString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHistoricalDataString) ProtoMessage() {}

func (x *QueryHistoricalDataString) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHistoricalDataString.ProtoReflect.Descriptor instead.
func (*QueryHistoricalDataString) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{23}
}

func (x *QueryHistoricalDataString) GetGroupNames() []string {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *QueryHistoricalDataString) GetItemNames() []string {
	if x != nil {
		return x.ItemNames
	}
	return nil
}

func (x *QueryHistoricalDataString) GetStartTimes() []int32 {
	if x != nil {
		return x.StartTimes
	}
	return nil
}

func (x *QueryHistoricalDataString) GetEndTimes() []int32 {
	if x != nil {
		return x.EndTimes
	}
	return nil
}

func (x *QueryHistoricalDataString) GetIntervals() []int32 {
	if x != nil {
		return x.Intervals
	}
	return nil
}

type GdbHistoricalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoricalData string `protobuf:"bytes,1,opt,name=historicalData,proto3" json:"historicalData,omitempty"`
}

func (x *GdbHistoricalData) Reset() {
	*x = GdbHistoricalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdbHistoricalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdbHistoricalData) ProtoMessage() {}

func (x *GdbHistoricalData) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdbHistoricalData.ProtoReflect.Descriptor instead.
func (*GdbHistoricalData) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{24}
}

func (x *GdbHistoricalData) GetHistoricalData() string {
	if x != nil {
		return x.HistoricalData
	}
	return ""
}

type TimeStamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeStamp []int32 `protobuf:"varint,1,rep,packed,name=timeStamp,proto3" json:"timeStamp,omitempty"`
}

func (x *TimeStamp) Reset() {
	*x = TimeStamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeStamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeStamp) ProtoMessage() {}

func (x *TimeStamp) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeStamp.ProtoReflect.Descriptor instead.
func (*TimeStamp) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{25}
}

func (x *TimeStamp) GetTimeStamp() []int32 {
	if x != nil {
		return x.TimeStamp
	}
	return nil
}

type QueryHistoricalDataWithTimeStampString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupNames []string     `protobuf:"bytes,3,rep,name=groupNames,proto3" json:"groupNames,omitempty"`
	ItemNames  []string     `protobuf:"bytes,1,rep,name=itemNames,proto3" json:"itemNames,omitempty"`
	TimeStamps []*TimeStamp `protobuf:"bytes,2,rep,name=timeStamps,proto3" json:"timeStamps,omitempty"`
}

func (x *QueryHistoricalDataWithTimeStampString) Reset() {
	*x = QueryHistoricalDataWithTimeStampString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHistoricalDataWithTimeStampString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHistoricalDataWithTimeStampString) ProtoMessage() {}

func (x *QueryHistoricalDataWithTimeStampString) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHistoricalDataWithTimeStampString.ProtoReflect.Descriptor instead.
func (*QueryHistoricalDataWithTimeStampString) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{26}
}

func (x *QueryHistoricalDataWithTimeStampString) GetGroupNames() []string {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *QueryHistoricalDataWithTimeStampString) GetItemNames() []string {
	if x != nil {
		return x.ItemNames
	}
	return nil
}

func (x *QueryHistoricalDataWithTimeStampString) GetTimeStamps() []*TimeStamp {
	if x != nil {
		return x.TimeStamps
	}
	return nil
}

type DeadZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemName      string `protobuf:"bytes,1,opt,name=itemName,proto3" json:"itemName,omitempty"`
	DeadZoneCount int32  `protobuf:"varint,2,opt,name=deadZoneCount,proto3" json:"deadZoneCount,omitempty"`
}

func (x *DeadZone) Reset() {
	*x = DeadZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeadZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeadZone) ProtoMessage() {}

func (x *DeadZone) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeadZone.ProtoReflect.Descriptor instead.
func (*DeadZone) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{27}
}

func (x *DeadZone) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *DeadZone) GetDeadZoneCount() int32 {
	if x != nil {
		return x.DeadZoneCount
	}
	return 0
}

type QueryHistoricalDataWithConditionString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupNames      []string     `protobuf:"bytes,8,rep,name=groupNames,proto3" json:"groupNames,omitempty"`
	ItemNames       []string     `protobuf:"bytes,1,rep,name=itemNames,proto3" json:"itemNames,omitempty"`
	TimeStamps      []*TimeStamp `protobuf:"bytes,2,rep,name=timeStamps,proto3" json:"timeStamps,omitempty"`
	StartTimes      []int32      `protobuf:"varint,3,rep,packed,name=startTimes,proto3" json:"startTimes,omitempty"`
	EndTimes        []int32      `protobuf:"varint,4,rep,packed,name=endTimes,proto3" json:"endTimes,omitempty"`
	Intervals       []int32      `protobuf:"varint,5,rep,packed,name=intervals,proto3" json:"intervals,omitempty"`
	FilterCondition string       `protobuf:"bytes,6,opt,name=filterCondition,proto3" json:"filterCondition,omitempty"`
	DeadZones       []*DeadZone  `protobuf:"bytes,7,rep,name=deadZones,proto3" json:"deadZones,omitempty"`
}

func (x *QueryHistoricalDataWithConditionString) Reset() {
	*x = QueryHistoricalDataWithConditionString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryHistoricalDataWithConditionString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryHistoricalDataWithConditionString) ProtoMessage() {}

func (x *QueryHistoricalDataWithConditionString) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryHistoricalDataWithConditionString.ProtoReflect.Descriptor instead.
func (*QueryHistoricalDataWithConditionString) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{28}
}

func (x *QueryHistoricalDataWithConditionString) GetGroupNames() []string {
	if x != nil {
		return x.GroupNames
	}
	return nil
}

func (x *QueryHistoricalDataWithConditionString) GetItemNames() []string {
	if x != nil {
		return x.ItemNames
	}
	return nil
}

func (x *QueryHistoricalDataWithConditionString) GetTimeStamps() []*TimeStamp {
	if x != nil {
		return x.TimeStamps
	}
	return nil
}

func (x *QueryHistoricalDataWithConditionString) GetStartTimes() []int32 {
	if x != nil {
		return x.StartTimes
	}
	return nil
}

func (x *QueryHistoricalDataWithConditionString) GetEndTimes() []int32 {
	if x != nil {
		return x.EndTimes
	}
	return nil
}

func (x *QueryHistoricalDataWithConditionString) GetIntervals() []int32 {
	if x != nil {
		return x.Intervals
	}
	return nil
}

func (x *QueryHistoricalDataWithConditionString) GetFilterCondition() string {
	if x != nil {
		return x.FilterCondition
	}
	return ""
}

func (x *QueryHistoricalDataWithConditionString) GetDeadZones() []*DeadZone {
	if x != nil {
		return x.DeadZones
	}
	return nil
}

type GdbInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info string `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GdbInfoData) Reset() {
	*x = GdbInfoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdbInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdbInfoData) ProtoMessage() {}

func (x *GdbInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdbInfoData.ProtoReflect.Descriptor instead.
func (*GdbInfoData) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{29}
}

func (x *GdbInfoData) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type BatchWriteHistoricalString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HistoricalItemValues string `protobuf:"bytes,1,opt,name=historicalItemValues,proto3" json:"historicalItemValues,omitempty"`
}

func (x *BatchWriteHistoricalString) Reset() {
	*x = BatchWriteHistoricalString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchWriteHistoricalString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchWriteHistoricalString) ProtoMessage() {}

func (x *BatchWriteHistoricalString) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchWriteHistoricalString.ProtoReflect.Descriptor instead.
func (*BatchWriteHistoricalString) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{30}
}

func (x *BatchWriteHistoricalString) GetHistoricalItemValues() string {
	if x != nil {
		return x.HistoricalItemValues
	}
	return ""
}

type QuerySpeedHistoryDataString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemName   string  `protobuf:"bytes,1,opt,name=itemName,proto3" json:"itemName,omitempty"`
	StartTimes []int32 `protobuf:"varint,2,rep,packed,name=startTimes,proto3" json:"startTimes,omitempty"`
	EndTimes   []int32 `protobuf:"varint,3,rep,packed,name=endTimes,proto3" json:"endTimes,omitempty"`
	Intervals  []int32 `protobuf:"varint,4,rep,packed,name=intervals,proto3" json:"intervals,omitempty"`
}

func (x *QuerySpeedHistoryDataString) Reset() {
	*x = QuerySpeedHistoryDataString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuerySpeedHistoryDataString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuerySpeedHistoryDataString) ProtoMessage() {}

func (x *QuerySpeedHistoryDataString) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuerySpeedHistoryDataString.ProtoReflect.Descriptor instead.
func (*QuerySpeedHistoryDataString) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{31}
}

func (x *QuerySpeedHistoryDataString) GetItemName() string {
	if x != nil {
		return x.ItemName
	}
	return ""
}

func (x *QuerySpeedHistoryDataString) GetStartTimes() []int32 {
	if x != nil {
		return x.StartTimes
	}
	return nil
}

func (x *QuerySpeedHistoryDataString) GetEndTimes() []int32 {
	if x != nil {
		return x.EndTimes
	}
	return nil
}

func (x *QuerySpeedHistoryDataString) GetIntervals() []int32 {
	if x != nil {
		return x.Intervals
	}
	return nil
}

type AuthInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	PassWord string `protobuf:"bytes,2,opt,name=passWord,proto3" json:"passWord,omitempty"`
}

func (x *AuthInfo) Reset() {
	*x = AuthInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthInfo) ProtoMessage() {}

func (x *AuthInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthInfo.ProtoReflect.Descriptor instead.
func (*AuthInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{32}
}

func (x *AuthInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AuthInfo) GetPassWord() string {
	if x != nil {
		return x.PassWord
	}
	return ""
}

type UserToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserToken) Reset() {
	*x = UserToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserToken) ProtoMessage() {}

func (x *UserToken) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserToken.ProtoReflect.Descriptor instead.
func (*UserToken) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{33}
}

func (x *UserToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UserName) Reset() {
	*x = UserName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserName) ProtoMessage() {}

func (x *UserName) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserName.ProtoReflect.Descriptor instead.
func (*UserName) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{34}
}

func (x *UserName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Role     []string `protobuf:"bytes,2,rep,name=role,proto3" json:"role,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{35}
}

func (x *UserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserInfo) GetRole() []string {
	if x != nil {
		return x.Role
	}
	return nil
}

type QueryLogsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level     string `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	StartTime string `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   string `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	StartRow  int32  `protobuf:"varint,4,opt,name=startRow,proto3" json:"startRow,omitempty"`
	RowCount  int32  `protobuf:"varint,5,opt,name=rowCount,proto3" json:"rowCount,omitempty"`
	Name      string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *QueryLogsInfo) Reset() {
	*x = QueryLogsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLogsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLogsInfo) ProtoMessage() {}

func (x *QueryLogsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLogsInfo.ProtoReflect.Descriptor instead.
func (*QueryLogsInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{36}
}

func (x *QueryLogsInfo) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *QueryLogsInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *QueryLogsInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *QueryLogsInfo) GetStartRow() int32 {
	if x != nil {
		return x.StartRow
	}
	return 0
}

func (x *QueryLogsInfo) GetRowCount() int32 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *QueryLogsInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LogsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos string `protobuf:"bytes,1,opt,name=infos,proto3" json:"infos,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *LogsInfo) Reset() {
	*x = LogsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsInfo) ProtoMessage() {}

func (x *LogsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsInfo.ProtoReflect.Descriptor instead.
func (*LogsInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{37}
}

func (x *LogsInfo) GetInfos() string {
	if x != nil {
		return x.Infos
	}
	return ""
}

func (x *LogsInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type FileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName  string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	GroupName string `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName,omitempty"`
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{38}
}

func (x *FileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

type UploadedFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string  `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	File     []int32 `protobuf:"varint,2,rep,packed,name=file,proto3" json:"file,omitempty"`
}

func (x *UploadedFileInfo) Reset() {
	*x = UploadedFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadedFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadedFileInfo) ProtoMessage() {}

func (x *UploadedFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadedFileInfo.ProtoReflect.Descriptor instead.
func (*UploadedFileInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{39}
}

func (x *UploadedFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadedFileInfo) GetFile() []int32 {
	if x != nil {
		return x.File
	}
	return nil
}

type HistoryFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName  string   `protobuf:"bytes,4,opt,name=groupName,proto3" json:"groupName,omitempty"`
	FileName   string   `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	ItemNames  []string `protobuf:"bytes,2,rep,name=itemNames,proto3" json:"itemNames,omitempty"`
	SheetNames []string `protobuf:"bytes,3,rep,name=sheetNames,proto3" json:"sheetNames,omitempty"`
}

func (x *HistoryFileInfo) Reset() {
	*x = HistoryFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HistoryFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoryFileInfo) ProtoMessage() {}

func (x *HistoryFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoryFileInfo.ProtoReflect.Descriptor instead.
func (*HistoryFileInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{40}
}

func (x *HistoryFileInfo) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *HistoryFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *HistoryFileInfo) GetItemNames() []string {
	if x != nil {
		return x.ItemNames
	}
	return nil
}

func (x *HistoryFileInfo) GetSheetNames() []string {
	if x != nil {
		return x.SheetNames
	}
	return nil
}

type FileContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contents []int32 `protobuf:"varint,1,rep,packed,name=contents,proto3" json:"contents,omitempty"`
}

func (x *FileContents) Reset() {
	*x = FileContents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileContents) ProtoMessage() {}

func (x *FileContents) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileContents.ProtoReflect.Descriptor instead.
func (*FileContents) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{41}
}

func (x *FileContents) GetContents() []int32 {
	if x != nil {
		return x.Contents
	}
	return nil
}

type UserInfos struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfos string `protobuf:"bytes,1,opt,name=userInfos,proto3" json:"userInfos,omitempty"`
}

func (x *UserInfos) Reset() {
	*x = UserInfos{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfos) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfos) ProtoMessage() {}

func (x *UserInfos) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfos.ProtoReflect.Descriptor instead.
func (*UserInfos) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{42}
}

func (x *UserInfos) GetUserInfos() string {
	if x != nil {
		return x.UserInfos
	}
	return ""
}

type AddUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Role     string `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	PassWord string `protobuf:"bytes,3,opt,name=passWord,proto3" json:"passWord,omitempty"`
}

func (x *AddUserInfo) Reset() {
	*x = AddUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserInfo) ProtoMessage() {}

func (x *AddUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserInfo.ProtoReflect.Descriptor instead.
func (*AddUserInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{43}
}

func (x *AddUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddUserInfo) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *AddUserInfo) GetPassWord() string {
	if x != nil {
		return x.PassWord
	}
	return ""
}

type UpdatedUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName    string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	NewUserName string `protobuf:"bytes,2,opt,name=newUserName,proto3" json:"newUserName,omitempty"`
	NewPassWord string `protobuf:"bytes,3,opt,name=newPassWord,proto3" json:"newPassWord,omitempty"`
	NewRole     string `protobuf:"bytes,4,opt,name=newRole,proto3" json:"newRole,omitempty"`
}

func (x *UpdatedUserInfo) Reset() {
	*x = UpdatedUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedUserInfo) ProtoMessage() {}

func (x *UpdatedUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedUserInfo.ProtoReflect.Descriptor instead.
func (*UpdatedUserInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{44}
}

func (x *UpdatedUserInfo) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpdatedUserInfo) GetNewUserName() string {
	if x != nil {
		return x.NewUserName
	}
	return ""
}

func (x *UpdatedUserInfo) GetNewPassWord() string {
	if x != nil {
		return x.NewPassWord
	}
	return ""
}

func (x *UpdatedUserInfo) GetNewRole() string {
	if x != nil {
		return x.NewRole
	}
	return ""
}

type DeletedLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime         string `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime           string `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	UserNameCondition string `protobuf:"bytes,4,opt,name=userNameCondition,proto3" json:"userNameCondition,omitempty"`
}

func (x *DeletedLogInfo) Reset() {
	*x = DeletedLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletedLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletedLogInfo) ProtoMessage() {}

func (x *DeletedLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletedLogInfo.ProtoReflect.Descriptor instead.
func (*DeletedLogInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{45}
}

func (x *DeletedLogInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeletedLogInfo) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *DeletedLogInfo) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *DeletedLogInfo) GetUserNameCondition() string {
	if x != nil {
		return x.UserNameCondition
	}
	return ""
}

type RoutesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Routes []string `protobuf:"bytes,2,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *RoutesInfo) Reset() {
	*x = RoutesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutesInfo) ProtoMessage() {}

func (x *RoutesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutesInfo.ProtoReflect.Descriptor instead.
func (*RoutesInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{46}
}

func (x *RoutesInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoutesInfo) GetRoutes() []string {
	if x != nil {
		return x.Routes
	}
	return nil
}

type Routes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routes string `protobuf:"bytes,1,opt,name=routes,proto3" json:"routes,omitempty"`
}

func (x *Routes) Reset() {
	*x = Routes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Routes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Routes) ProtoMessage() {}

func (x *Routes) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Routes.ProtoReflect.Descriptor instead.
func (*Routes) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{47}
}

func (x *Routes) GetRoutes() string {
	if x != nil {
		return x.Routes
	}
	return ""
}

type CheckResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result []int32 `protobuf:"varint,1,rep,packed,name=result,proto3" json:"result,omitempty"`
}

func (x *CheckResult) Reset() {
	*x = CheckResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckResult) ProtoMessage() {}

func (x *CheckResult) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckResult.ProtoReflect.Descriptor instead.
func (*CheckResult) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{48}
}

func (x *CheckResult) GetResult() []int32 {
	if x != nil {
		return x.Result
	}
	return nil
}

type AddedCalcItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expression  string `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
	Flag        string `protobuf:"bytes,2,opt,name=flag,proto3" json:"flag,omitempty"`
	Duration    string `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AddedCalcItemInfo) Reset() {
	*x = AddedCalcItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddedCalcItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddedCalcItemInfo) ProtoMessage() {}

func (x *AddedCalcItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddedCalcItemInfo.ProtoReflect.Descriptor instead.
func (*AddedCalcItemInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{49}
}

func (x *AddedCalcItemInfo) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *AddedCalcItemInfo) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *AddedCalcItemInfo) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *AddedCalcItemInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CalculationResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CalculationResult) Reset() {
	*x = CalculationResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculationResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculationResult) ProtoMessage() {}

func (x *CalculationResult) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculationResult.ProtoReflect.Descriptor instead.
func (*CalculationResult) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{50}
}

func (x *CalculationResult) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type CalculationResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CalculationResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *CalculationResults) Reset() {
	*x = CalculationResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculationResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculationResults) ProtoMessage() {}

func (x *CalculationResults) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculationResults.ProtoReflect.Descriptor instead.
func (*CalculationResults) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{51}
}

func (x *CalculationResults) GetResults() []*CalculationResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type QueryCalcItemsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Condition string `protobuf:"bytes,1,opt,name=condition,proto3" json:"condition,omitempty"`
}

func (x *QueryCalcItemsInfo) Reset() {
	*x = QueryCalcItemsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCalcItemsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCalcItemsInfo) ProtoMessage() {}

func (x *QueryCalcItemsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCalcItemsInfo.ProtoReflect.Descriptor instead.
func (*QueryCalcItemsInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{52}
}

func (x *QueryCalcItemsInfo) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

type CalcItemsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos string `protobuf:"bytes,1,opt,name=infos,proto3" json:"infos,omitempty"`
}

func (x *CalcItemsInfo) Reset() {
	*x = CalcItemsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcItemsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcItemsInfo) ProtoMessage() {}

func (x *CalcItemsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcItemsInfo.ProtoReflect.Descriptor instead.
func (*CalcItemsInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{53}
}

func (x *CalcItemsInfo) GetInfos() string {
	if x != nil {
		return x.Infos
	}
	return ""
}

type UpdatedCalcInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Expression  string `protobuf:"bytes,3,opt,name=expression,proto3" json:"expression,omitempty"`
	Duration    string `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
}

func (x *UpdatedCalcInfo) Reset() {
	*x = UpdatedCalcInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatedCalcInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatedCalcInfo) ProtoMessage() {}

func (x *UpdatedCalcInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatedCalcInfo.ProtoReflect.Descriptor instead.
func (*UpdatedCalcInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{54}
}

func (x *UpdatedCalcInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdatedCalcInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatedCalcInfo) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *UpdatedCalcInfo) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

type CalcId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *CalcId) Reset() {
	*x = CalcId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalcId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalcId) ProtoMessage() {}

func (x *CalcId) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalcId.ProtoReflect.Descriptor instead.
func (*CalcId) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{55}
}

func (x *CalcId) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type TestCalcItemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Expression string `protobuf:"bytes,1,opt,name=expression,proto3" json:"expression,omitempty"`
}

func (x *TestCalcItemInfo) Reset() {
	*x = TestCalcItemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestCalcItemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestCalcItemInfo) ProtoMessage() {}

func (x *TestCalcItemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestCalcItemInfo.ProtoReflect.Descriptor instead.
func (*TestCalcItemInfo) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{56}
}

func (x *TestCalcItemInfo) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

type TestResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *TestResult) Reset() {
	*x = TestResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gdb_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResult) ProtoMessage() {}

func (x *TestResult) ProtoReflect() protoreflect.Message {
	mi := &file_gdb_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResult.ProtoReflect.Descriptor instead.
func (*TestResult) Descriptor() ([]byte, []int) {
	return file_gdb_proto_rawDescGZIP(), []int{57}
}

func (x *TestResult) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_gdb_proto protoreflect.FileDescriptor

var file_gdb_proto_rawDesc = []byte{
	0x0a, 0x09, 0x67, 0x64, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x2a, 0x0a, 0x04, 0x52, 0x6f, 0x77, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x2a, 0x0a, 0x04, 0x43,
	0x6f, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x43,
	0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x73, 0x22, 0x50, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x0f, 0x41, 0x64, 0x64,
	0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x35, 0x0a, 0x0a,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x73, 0x22, 0x30, 0x0a, 0x0e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x5b, 0x0a, 0x11, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x22, 0x54, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5e, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x6c, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6e, 0x65, 0x77, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x6c, 0x64, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x6c, 0x64, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x65,
	0x77, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x22, 0x5d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x22, 0x7d, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x4e, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x4e, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0xb9, 0x01, 0x0a, 0x09, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c,
	0x61, 0x75, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x75,
	0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x77,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x66, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6c, 0x61, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c,
	0x61, 0x75, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x07, 0x47, 0x64, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x1a, 0x38, 0x0a, 0x0a, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3a, 0x0a, 0x08, 0x47, 0x64,
	0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x61, 0x0a, 0x11, 0x47, 0x64, 0x62, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x69, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x69, 0x74, 0x65,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x69,
	0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x4c, 0x0a, 0x0e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x17, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x22, 0x35, 0x0a, 0x0f, 0x47, 0x64, 0x62, 0x52, 0x65, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb3, 0x01, 0x0a, 0x19,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65,
	0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x73, 0x22, 0x3b, 0x0a, 0x11, 0x47, 0x64, 0x62, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x29,
	0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x98, 0x01, 0x0a, 0x26, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x6d, 0x70, 0x73, 0x22, 0x4c, 0x0a, 0x08, 0x44, 0x65, 0x61, 0x64, 0x5a, 0x6f, 0x6e, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x64, 0x65, 0x61, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x65, 0x61, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0xcb, 0x02, 0x0a, 0x26, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f,
	0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a,
	0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x74,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x08, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x61,
	0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x09, 0x64, 0x65, 0x61, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x73,
	0x22, 0x21, 0x0a, 0x0b, 0x47, 0x64, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x22, 0x50, 0x0a, 0x1a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x32, 0x0a, 0x14, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x70, 0x65, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x42, 0x0a, 0x08, 0x41,
	0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x22,
	0x21, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x1e, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x3a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0xa9,
	0x01, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f,
	0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a, 0x08, 0x4c, 0x6f,
	0x67, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x44, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x42, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x89, 0x01, 0x0a,
	0x0f, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x74,
	0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x68, 0x65, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x2a, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0x29, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x51, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x57, 0x6f,
	0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x57, 0x6f,
	0x72, 0x64, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x57,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61,
	0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x65, 0x77, 0x52, 0x6f, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x52, 0x6f, 0x6c, 0x65,
	0x22, 0x86, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0a, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x22, 0x20, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x25, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x85, 0x01, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x2b, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x48, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x32, 0x0a, 0x12, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x25, 0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x7f, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x18, 0x0a, 0x06, 0x43, 0x61, 0x6c, 0x63, 0x49,
	0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x32, 0x0a, 0x10, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x0a, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x95, 0x04, 0x0a, 0x05,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x4d, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x10,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6c, 0x73, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6c,
	0x73, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41,
	0x64, 0x64, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6c,
	0x73, 0x22, 0x00, 0x32, 0x92, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x08,
	0x41, 0x64, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x35,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x17, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52,
	0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x10, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x18, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x15,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x0f, 0x43, 0x6c, 0x65, 0x61, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x32, 0xfc, 0x05, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x34, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x63, 0x68, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12,
	0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x28, 0x01, 0x12, 0x57, 0x0a, 0x18, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63,
	0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x63, 0x0a, 0x22, 0x42, 0x61, 0x74, 0x63, 0x68, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x57, 0x72, 0x69, 0x74, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x4b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x16, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x18, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x57, 0x69, 0x74, 0x68,
	0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x57, 0x69, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00,
	0x12, 0x6b, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x57, 0x69,
	0x74, 0x68, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x52, 0x61, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x18, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00, 0x32, 0x99, 0x0a, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x30, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x0f, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x10,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x4f, 0x75, 0x74,
	0x12, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0f, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x36,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x12, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52,
	0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f,
	0x77, 0x73, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x0a, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x14, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x17, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x31, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x42, 0x79, 0x45, 0x78, 0x63, 0x65, 0x6c, 0x12, 0x0f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x14, 0x49,
	0x6d, 0x70, 0x6f, 0x72, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x45, 0x78,
	0x63, 0x65, 0x6c, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x73,
	0x12, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x6f,
	0x67, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c,
	0x6f, 0x67, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x36, 0x0a,
	0x0c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0f, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x13,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x62, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x47, 0x64, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x22, 0x00,
	0x12, 0x52, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x70, 0x65, 0x65, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x47, 0x64, 0x62, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x11, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0b, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x11, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x32,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73,
	0x22, 0x00, 0x12, 0x37, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0d, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x12, 0x11, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x12, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x00, 0x32, 0xf1, 0x03, 0x0a, 0x04, 0x43, 0x61, 0x6c, 0x63, 0x12, 0x3c, 0x0a, 0x0c,
	0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x17, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x65,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12,
	0x50, 0x0a, 0x15, 0x41, 0x64, 0x64, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x57, 0x69,
	0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x18, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x41, 0x64, 0x64, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x00, 0x28,
	0x01, 0x12, 0x41, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x19, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x18,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x0d, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0d, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x64, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0c, 0x53, 0x74, 0x6f,
	0x70, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x64, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0d, 0x2e, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x49, 0x64, 0x1a, 0x0b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x52, 0x6f, 0x77, 0x73, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gdb_proto_rawDescOnce sync.Once
	file_gdb_proto_rawDescData = file_gdb_proto_rawDesc
)

func file_gdb_proto_rawDescGZIP() []byte {
	file_gdb_proto_rawDescOnce.Do(func() {
		file_gdb_proto_rawDescData = protoimpl.X.CompressGZIP(file_gdb_proto_rawDescData)
	})
	return file_gdb_proto_rawDescData
}

var file_gdb_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_gdb_proto_goTypes = []interface{}{
	(*Rows)(nil),                                   // 0: model.Rows
	(*Cols)(nil),                                   // 1: model.Cols
	(*AddedGroupInfo)(nil),                         // 2: model.AddedGroupInfo
	(*AddedGroupInfos)(nil),                        // 3: model.AddedGroupInfos
	(*GroupNamesInfo)(nil),                         // 4: model.GroupNamesInfo
	(*GroupPropertyInfo)(nil),                      // 5: model.GroupPropertyInfo
	(*QueryGroupPropertyInfo)(nil),                 // 6: model.QueryGroupPropertyInfo
	(*UpdatedGroupNameInfo)(nil),                   // 7: model.UpdatedGroupNameInfo
	(*UpdatedGroupNamesInfo)(nil),                  // 8: model.UpdatedGroupNamesInfo
	(*UpdatedGroupColumnNamesInfo)(nil),            // 9: model.UpdatedGroupColumnNamesInfo
	(*DeletedGroupColumnNamesInfo)(nil),            // 10: model.DeletedGroupColumnNamesInfo
	(*AddedGroupColumnsInfo)(nil),                  // 11: model.AddedGroupColumnsInfo
	(*AddedItemsInfo)(nil),                         // 12: model.AddedItemsInfo
	(*DeletedItemsInfo)(nil),                       // 13: model.DeletedItemsInfo
	(*ItemsInfo)(nil),                              // 14: model.ItemsInfo
	(*UpdatedItemsInfo)(nil),                       // 15: model.UpdatedItemsInfo
	(*GdbItem)(nil),                                // 16: model.GdbItem
	(*GdbItems)(nil),                               // 17: model.GdbItems
	(*GdbItemsWithCount)(nil),                      // 18: model.GdbItemsWithCount
	(*CheckItemsInfo)(nil),                         // 19: model.CheckItemsInfo
	(*BatchWriteString)(nil),                       // 20: model.BatchWriteString
	(*QueryRealTimeDataString)(nil),                // 21: model.QueryRealTimeDataString
	(*GdbRealTimeData)(nil),                        // 22: model.GdbRealTimeData
	(*QueryHistoricalDataString)(nil),              // 23: model.QueryHistoricalDataString
	(*GdbHistoricalData)(nil),                      // 24: model.GdbHistoricalData
	(*TimeStamp)(nil),                              // 25: model.TimeStamp
	(*QueryHistoricalDataWithTimeStampString)(nil), // 26: model.QueryHistoricalDataWithTimeStampString
	(*DeadZone)(nil),                               // 27: model.DeadZone
	(*QueryHistoricalDataWithConditionString)(nil), // 28: model.QueryHistoricalDataWithConditionString
	(*GdbInfoData)(nil),                            // 29: model.GdbInfoData
	(*BatchWriteHistoricalString)(nil),             // 30: model.BatchWriteHistoricalString
	(*QuerySpeedHistoryDataString)(nil),            // 31: model.QuerySpeedHistoryDataString
	(*AuthInfo)(nil),                               // 32: model.AuthInfo
	(*UserToken)(nil),                              // 33: model.UserToken
	(*UserName)(nil),                               // 34: model.UserName
	(*UserInfo)(nil),                               // 35: model.UserInfo
	(*QueryLogsInfo)(nil),                          // 36: model.QueryLogsInfo
	(*LogsInfo)(nil),                               // 37: model.LogsInfo
	(*FileInfo)(nil),                               // 38: model.FileInfo
	(*UploadedFileInfo)(nil),                       // 39: model.UploadedFileInfo
	(*HistoryFileInfo)(nil),                        // 40: model.HistoryFileInfo
	(*FileContents)(nil),                           // 41: model.FileContents
	(*UserInfos)(nil),                              // 42: model.UserInfos
	(*AddUserInfo)(nil),                            // 43: model.AddUserInfo
	(*UpdatedUserInfo)(nil),                        // 44: model.UpdatedUserInfo
	(*DeletedLogInfo)(nil),                         // 45: model.DeletedLogInfo
	(*RoutesInfo)(nil),                             // 46: model.RoutesInfo
	(*Routes)(nil),                                 // 47: model.Routes
	(*CheckResult)(nil),                            // 48: model.CheckResult
	(*AddedCalcItemInfo)(nil),                      // 49: model.AddedCalcItemInfo
	(*CalculationResult)(nil),                      // 50: model.CalculationResult
	(*CalculationResults)(nil),                     // 51: model.CalculationResults
	(*QueryCalcItemsInfo)(nil),                     // 52: model.QueryCalcItemsInfo
	(*CalcItemsInfo)(nil),                          // 53: model.CalcItemsInfo
	(*UpdatedCalcInfo)(nil),                        // 54: model.UpdatedCalcInfo
	(*CalcId)(nil),                                 // 55: model.CalcId
	(*TestCalcItemInfo)(nil),                       // 56: model.TestCalcItemInfo
	(*TestResult)(nil),                             // 57: model.TestResult
	nil,                                            // 58: model.GdbItem.ItemsEntry
	(*emptypb.Empty)(nil),                          // 59: google.protobuf.Empty
}
var file_gdb_proto_depIdxs = []int32{
	2,  // 0: model.AddedGroupInfos.groupInfos:type_name -> model.AddedGroupInfo
	7,  // 1: model.UpdatedGroupNamesInfo.infos:type_name -> model.UpdatedGroupNameInfo
	58, // 2: model.GdbItem.items:type_name -> model.GdbItem.ItemsEntry
	16, // 3: model.GdbItems.itemValues:type_name -> model.GdbItem
	16, // 4: model.GdbItemsWithCount.itemValues:type_name -> model.GdbItem
	25, // 5: model.QueryHistoricalDataWithTimeStampString.timeStamps:type_name -> model.TimeStamp
	25, // 6: model.QueryHistoricalDataWithConditionString.timeStamps:type_name -> model.TimeStamp
	27, // 7: model.QueryHistoricalDataWithConditionString.deadZones:type_name -> model.DeadZone
	50, // 8: model.CalculationResults.results:type_name -> model.CalculationResult
	3,  // 9: model.Group.AddGroups:input_type -> model.AddedGroupInfos
	4,  // 10: model.Group.DeleteGroups:input_type -> model.GroupNamesInfo
	59, // 11: model.Group.GetGroups:input_type -> google.protobuf.Empty
	6,  // 12: model.Group.GetGroupProperty:input_type -> model.QueryGroupPropertyInfo
	8,  // 13: model.Group.UpdateGroupNames:input_type -> model.UpdatedGroupNamesInfo
	9,  // 14: model.Group.UpdateGroupColumnNames:input_type -> model.UpdatedGroupColumnNamesInfo
	10, // 15: model.Group.DeleteGroupColumns:input_type -> model.DeletedGroupColumnNamesInfo
	11, // 16: model.Group.AddGroupColumns:input_type -> model.AddedGroupColumnsInfo
	12, // 17: model.Item.AddItems:input_type -> model.AddedItemsInfo
	13, // 18: model.Item.DeleteItems:input_type -> model.DeletedItemsInfo
	14, // 19: model.Item.GetItems:input_type -> model.ItemsInfo
	14, // 20: model.Item.GetItemsWithCount:input_type -> model.ItemsInfo
	15, // 21: model.Item.UpdateItems:input_type -> model.UpdatedItemsInfo
	19, // 22: model.Item.CheckItems:input_type -> model.CheckItemsInfo
	4,  // 23: model.Item.CleanGroupItems:input_type -> model.GroupNamesInfo
	20, // 24: model.Data.BatchWrite:input_type -> model.BatchWriteString
	20, // 25: model.Data.BatchWriteWithStream:input_type -> model.BatchWriteString
	30, // 26: model.Data.BatchWriteHistoricalData:input_type -> model.BatchWriteHistoricalString
	30, // 27: model.Data.BatchWriteHistoricalDataWithStream:input_type -> model.BatchWriteHistoricalString
	21, // 28: model.Data.GetRealTimeData:input_type -> model.QueryRealTimeDataString
	23, // 29: model.Data.GetHistoricalData:input_type -> model.QueryHistoricalDataString
	26, // 30: model.Data.GetHistoricalDataWithStamp:input_type -> model.QueryHistoricalDataWithTimeStampString
	28, // 31: model.Data.GetHistoricalDataWithCondition:input_type -> model.QueryHistoricalDataWithConditionString
	21, // 32: model.Data.GetRawData:input_type -> model.QueryRealTimeDataString
	32, // 33: model.Page.UserLogin:input_type -> model.AuthInfo
	34, // 34: model.Page.UserLogOut:input_type -> model.UserName
	34, // 35: model.Page.GetUserInfo:input_type -> model.UserName
	59, // 36: model.Page.GetUsers:input_type -> google.protobuf.Empty
	43, // 37: model.Page.AddUsers:input_type -> model.AddUserInfo
	34, // 38: model.Page.DeleteUsers:input_type -> model.UserName
	44, // 39: model.Page.UpdateUsers:input_type -> model.UpdatedUserInfo
	39, // 40: model.Page.UploadFile:input_type -> model.UploadedFileInfo
	39, // 41: model.Page.UploadFileWithStream:input_type -> model.UploadedFileInfo
	38, // 42: model.Page.AddItemsByExcel:input_type -> model.FileInfo
	40, // 43: model.Page.ImportHistoryByExcel:input_type -> model.HistoryFileInfo
	36, // 44: model.Page.GetLogs:input_type -> model.QueryLogsInfo
	45, // 45: model.Page.DeleteLogs:input_type -> model.DeletedLogInfo
	38, // 46: model.Page.DownloadFile:input_type -> model.FileInfo
	59, // 47: model.Page.GetDbInfo:input_type -> google.protobuf.Empty
	31, // 48: model.Page.GetDbInfoHistory:input_type -> model.QuerySpeedHistoryDataString
	59, // 49: model.Page.GetRoutes:input_type -> google.protobuf.Empty
	46, // 50: model.Page.DeleteRoutes:input_type -> model.RoutesInfo
	46, // 51: model.Page.AddRoutes:input_type -> model.RoutesInfo
	46, // 52: model.Page.AddUserRoutes:input_type -> model.RoutesInfo
	34, // 53: model.Page.DeleteUserRoutes:input_type -> model.UserName
	59, // 54: model.Page.GetAllRoutes:input_type -> google.protobuf.Empty
	46, // 55: model.Page.CheckRoutes:input_type -> model.RoutesInfo
	56, // 56: model.Calc.TestCalcItem:input_type -> model.TestCalcItemInfo
	49, // 57: model.Calc.AddCalcItem:input_type -> model.AddedCalcItemInfo
	49, // 58: model.Calc.AddCalcItemWithStream:input_type -> model.AddedCalcItemInfo
	52, // 59: model.Calc.GetCalcItems:input_type -> model.QueryCalcItemsInfo
	54, // 60: model.Calc.UpdateCalcItem:input_type -> model.UpdatedCalcInfo
	55, // 61: model.Calc.StartCalcItem:input_type -> model.CalcId
	55, // 62: model.Calc.StopCalcItem:input_type -> model.CalcId
	55, // 63: model.Calc.DeleteCalcItem:input_type -> model.CalcId
	0,  // 64: model.Group.AddGroups:output_type -> model.Rows
	0,  // 65: model.Group.DeleteGroups:output_type -> model.Rows
	4,  // 66: model.Group.GetGroups:output_type -> model.GroupNamesInfo
	5,  // 67: model.Group.GetGroupProperty:output_type -> model.GroupPropertyInfo
	0,  // 68: model.Group.UpdateGroupNames:output_type -> model.Rows
	1,  // 69: model.Group.UpdateGroupColumnNames:output_type -> model.Cols
	1,  // 70: model.Group.DeleteGroupColumns:output_type -> model.Cols
	1,  // 71: model.Group.AddGroupColumns:output_type -> model.Cols
	0,  // 72: model.Item.AddItems:output_type -> model.Rows
	0,  // 73: model.Item.DeleteItems:output_type -> model.Rows
	17, // 74: model.Item.GetItems:output_type -> model.GdbItems
	18, // 75: model.Item.GetItemsWithCount:output_type -> model.GdbItemsWithCount
	0,  // 76: model.Item.UpdateItems:output_type -> model.Rows
	59, // 77: model.Item.CheckItems:output_type -> google.protobuf.Empty
	0,  // 78: model.Item.CleanGroupItems:output_type -> model.Rows
	0,  // 79: model.Data.BatchWrite:output_type -> model.Rows
	0,  // 80: model.Data.BatchWriteWithStream:output_type -> model.Rows
	59, // 81: model.Data.BatchWriteHistoricalData:output_type -> google.protobuf.Empty
	59, // 82: model.Data.BatchWriteHistoricalDataWithStream:output_type -> google.protobuf.Empty
	22, // 83: model.Data.GetRealTimeData:output_type -> model.GdbRealTimeData
	24, // 84: model.Data.GetHistoricalData:output_type -> model.GdbHistoricalData
	24, // 85: model.Data.GetHistoricalDataWithStamp:output_type -> model.GdbHistoricalData
	24, // 86: model.Data.GetHistoricalDataWithCondition:output_type -> model.GdbHistoricalData
	24, // 87: model.Data.GetRawData:output_type -> model.GdbHistoricalData
	33, // 88: model.Page.UserLogin:output_type -> model.UserToken
	59, // 89: model.Page.UserLogOut:output_type -> google.protobuf.Empty
	35, // 90: model.Page.GetUserInfo:output_type -> model.UserInfo
	42, // 91: model.Page.GetUsers:output_type -> model.UserInfos
	0,  // 92: model.Page.AddUsers:output_type -> model.Rows
	0,  // 93: model.Page.DeleteUsers:output_type -> model.Rows
	0,  // 94: model.Page.UpdateUsers:output_type -> model.Rows
	59, // 95: model.Page.UploadFile:output_type -> google.protobuf.Empty
	59, // 96: model.Page.UploadFileWithStream:output_type -> google.protobuf.Empty
	0,  // 97: model.Page.AddItemsByExcel:output_type -> model.Rows
	59, // 98: model.Page.ImportHistoryByExcel:output_type -> google.protobuf.Empty
	37, // 99: model.Page.GetLogs:output_type -> model.LogsInfo
	0,  // 100: model.Page.DeleteLogs:output_type -> model.Rows
	41, // 101: model.Page.DownloadFile:output_type -> model.FileContents
	29, // 102: model.Page.GetDbInfo:output_type -> model.GdbInfoData
	24, // 103: model.Page.GetDbInfoHistory:output_type -> model.GdbHistoricalData
	47, // 104: model.Page.GetRoutes:output_type -> model.Routes
	0,  // 105: model.Page.DeleteRoutes:output_type -> model.Rows
	0,  // 106: model.Page.AddRoutes:output_type -> model.Rows
	0,  // 107: model.Page.AddUserRoutes:output_type -> model.Rows
	0,  // 108: model.Page.DeleteUserRoutes:output_type -> model.Rows
	47, // 109: model.Page.GetAllRoutes:output_type -> model.Routes
	48, // 110: model.Page.CheckRoutes:output_type -> model.CheckResult
	57, // 111: model.Calc.TestCalcItem:output_type -> model.TestResult
	50, // 112: model.Calc.AddCalcItem:output_type -> model.CalculationResult
	51, // 113: model.Calc.AddCalcItemWithStream:output_type -> model.CalculationResults
	53, // 114: model.Calc.GetCalcItems:output_type -> model.CalcItemsInfo
	50, // 115: model.Calc.UpdateCalcItem:output_type -> model.CalculationResult
	0,  // 116: model.Calc.StartCalcItem:output_type -> model.Rows
	0,  // 117: model.Calc.StopCalcItem:output_type -> model.Rows
	0,  // 118: model.Calc.DeleteCalcItem:output_type -> model.Rows
	64, // [64:119] is the sub-list for method output_type
	9,  // [9:64] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_gdb_proto_init() }
func file_gdb_proto_init() {
	if File_gdb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gdb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cols); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddedGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddedGroupInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupNamesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupPropertyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGroupPropertyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedGroupNameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedGroupNamesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedGroupColumnNamesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletedGroupColumnNamesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddedGroupColumnsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddedItemsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletedItemsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedItemsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdbItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdbItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdbItemsWithCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckItemsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchWriteString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRealTimeDataString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdbRealTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHistoricalDataString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdbHistoricalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeStamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHistoricalDataWithTimeStampString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeadZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryHistoricalDataWithConditionString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdbInfoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchWriteHistoricalString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuerySpeedHistoryDataString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLogsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadedFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HistoryFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileContents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfos); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletedLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Routes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddedCalcItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculationResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculationResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCalcItemsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcItemsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatedCalcInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalcId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestCalcItemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gdb_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gdb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_gdb_proto_goTypes,
		DependencyIndexes: file_gdb_proto_depIdxs,
		MessageInfos:      file_gdb_proto_msgTypes,
	}.Build()
	File_gdb_proto = out.File
	file_gdb_proto_rawDesc = nil
	file_gdb_proto_goTypes = nil
	file_gdb_proto_depIdxs = nil
}
